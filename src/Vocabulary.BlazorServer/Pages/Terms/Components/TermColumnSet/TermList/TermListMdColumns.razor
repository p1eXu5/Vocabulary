@using Vocabulary.Adapters.Persistance.Models

@inherits TermListActions

@*<SelectColumn T="Term" />*@

<Column T="FullTerm" Field="Sequence" Title="#" Sortable="true" Filterable="false" CellClass="sequence-column" />

<!-- Name -->
<Column T="FullTerm" Title="Term" SortBy="@(term => term.Name)" CellClass="term-column">
    <CellTemplate>
        <MudText Typo="Typo.h6" Style="color: var(--mud-palette-warning-lighten);">@context.Item.Name</MudText>
        @if (!string.IsNullOrWhiteSpace(context.Item.AdditionalName)) {
            <MudText Typo="Typo.subtitle1" Style="color: #FFDF9D;">(@context.Item.AdditionalName)</MudText>
        }

        <div class="mt-5">
            <MudText Typo="Typo.body2" Class="d-inline-block pr-1" ><b>Categories</b>:</MudText>
            @if (context.Item.Categories.Any()) 
            {
                @foreach (var item in context.Item.Categories.Take(context.Item.Categories.Length - 1))
                {
                    <MudText Typo="Typo.body2" Class="d-inline-block">@(item.Name),</MudText>
                }

                <MudText Typo="Typo.body2" Class="d-inline-block">@(context.Item.Categories.Last().Name).</MudText>
            }
            else {
                <MudText Typo="Typo.body2" Class="d-inline-block"><i>no categories</i>.</MudText>
            }
        </div>

        <div class="mt-5">
            @if (context.Item.Synonyms.Any()) 
            {
                <MudText Typo="Typo.body2" Class="d-inline-block pr-1"><b>Synonyms</b>:</MudText>

                @foreach (var item in context.Item.Synonyms.Take(context.Item.Synonyms.Length - 1))
                {
                    <MudText Typo="Typo.body2" Class="d-inline-block pr-1">@(item.Name),</MudText>
                }

                <MudText Typo="Typo.body2" Class="d-inline-block">@(context.Item.Synonyms.Last().Name).</MudText>
            }
            @*else {
                <MudText Typo="Typo.body2" Class="d-inline-block"><i>no synonyms</i>.</MudText>
            }*@
        </div>
    </CellTemplate>
</Column>

<!-- Description -->
<Column T="FullTerm" Title="Description" Sortable="false" CellStyle="@BroadestColumnMinWidth">
    <CellTemplate>
        <div>
            <MudMarkdown Value="@context.Item.Description" />
        </div>
        @if (context.Item.Links.Any()) {
            <MudText Typo="@Typo.subtitle2" Class="mt-3" >see also:</MudText>
            <MudList Clickable="false" Class="p-0">
                @foreach (var item in context.Item.Links)
                {
                    <MudListItem>
                        <MudLink Href="@item.Href" Typo="Typo.body2">@(item.ResourceDescription ?? item.Href)</MudLink>
                    </MudListItem>
                }
            </MudList>
        }
    </CellTemplate>
</Column>

<!-- ValidationRules -->
<Column T="FullTerm" Title="Validation Rules" Sortable="false" CellStyle="@BroadestColumnMinWidth">
    <CellTemplate>
        <div>
            <MudMarkdown Value="@context.Item.ValidationRules" />
        </div>
    </CellTemplate>
</Column>

<Column T="FullTerm" Sortable="false">
    <CellTemplate>
        <TermMenu Compact="true"
                  OnEditRequested="@(() => OnNavigateToEdit(context.Item.Id.ToString()))"
                  OnCreateFromCopyRequested="@(() => OnNavigateToCopy(context.Item.Id.ToString()))"
                  OnGenerateLinksRequested="@(() => OnCheckDecriptionTerms(context.Item.Id))"
                  OnRemoveRequested="@(() => OnRemoveTerm(context.Item.Id))"
                  />
    </CellTemplate>
</Column>
