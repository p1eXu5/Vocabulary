@inherits FluxorComponent

@using Vocabulary.Adapters.Persistance.Models

@implements IDisposable

<MudNavMenu Class="pb-8">
    <MudToggleIconButton @bind-Toggled="@_grouping"
                         Icon="@Icons.Filled.FormatAlignJustify" Color="@Color.Warning" Title="Sort by name"
                         ToggledIcon="@Icons.Filled.FormatAlignRight" ToggledColor="@Color.Success" ToggledTitle="Grouping"
                         />
    <span>@(_grouping ? "Term groups" : "Term list")</span>
    <MudDivider />

    @if (Categories.Any()) {
        @if (_grouping) 
        {
            <MudNavLink Href="/terms" Match="NavLinkMatch.All">All Categories</MudNavLink>

            @if (UncategorizedTerms.Any()) 
            {
                <MudNavGroup Title="Uncategorized" Expanded="@IsExpanded[Guid.Empty]" ExpandedChanged="@(v => OnExpandedChanged(Guid.Empty, v))">
                    @{
                        var categoryHref = 
                            NavigationManager.GetUriWithQueryParameters("/terms", new Dictionary<string, object?> { ["categoryName"] = "Uncategorized" });

                        var newCategoryTermHref = 
                            NavigationManager.GetUriWithQueryParameters(
                                "/term/create", 
                                new Dictionary<string, object?> {
                                    ["returnUrl"] = 
                                        NavigationManager.Uri.StartsWith("/term") ? "/terms" : NavigationManager.Uri,
                                });
                    }

                    <MudNavLink Href="@categoryHref" Match="NavLinkMatch.All">All</MudNavLink>
                    <MudNavLink Href="@newCategoryTermHref" Match="NavLinkMatch.Prefix">New...</MudNavLink>
                    @foreach (var term in UncategorizedTerms)
                    {
                        var termHref = 
                            NavigationManager.GetUriWithQueryParameters("/terms", 
                                new Dictionary<string, object?> { 
                                    ["search"] = term.Name
                                });;

                        <TermNavLink Href="@termHref" Term="@term"/>
                    }
                </MudNavGroup>
            }

            @foreach (var cat in Categories)
            {
                // href - "/?categoryName={cat.Name}"
                var categoryHref = 
                    NavigationManager.GetUriWithQueryParameters("/terms", new Dictionary<string, object?> { ["categoryName"] = cat.Name });

                // href - "/?categoryName={cat.Name}"
                var newCategoryTermHref = 
                    NavigationManager.GetUriWithQueryParameters(
                        "/term/create", 
                        new Dictionary<string, object?> { 
                            ["categoryId"] = cat.Id,
                            ["returnUrl"] = 
                                NavigationManager.Uri.StartsWith("/term") ? "/terms" : NavigationManager.Uri,
                        });


                <MudNavGroup Title="@cat.Name" Expanded="@IsExpanded[cat.Id]" ExpandedChanged="@(v => OnExpandedChanged(cat.Id, v))">
                    <MudNavLink Href="@categoryHref" Match="NavLinkMatch.All">All</MudNavLink>
                    <MudNavLink Href="@newCategoryTermHref" Match="NavLinkMatch.Prefix">New...</MudNavLink>
                    @foreach (var term in cat.TermNames)
                    {
                        var termHref = 
                            NavigationManager.GetUriWithQueryParameters("/terms", 
                                new Dictionary<string, object?> { 
                                    ["categoryName"] = cat.Name,
                                    ["search"] = term.Name
                                });;

                        <TermNavLink Href="@termHref" Term="@term"/>
                    }
                </MudNavGroup>
            }
        }
        else {
            var newCategoryTermHref = 
                NavigationManager.GetUriWithQueryParameters(
                    "/term/create", 
                    new Dictionary<string, object?> {
                        ["returnUrl"] = 
                            NavigationManager.Uri.StartsWith("/term") ? "/terms" : NavigationManager.Uri,
                    });

            <MudNavLink Href="@newCategoryTermHref" Match="NavLinkMatch.Prefix">New...</MudNavLink>

            @foreach (var term in Categories.SelectMany(c => c.TermNames).DistinctBy(t => t.Id).Concat(UncategorizedTerms).OrderBy(t => t.Name)) {
                var termHref = 
                    NavigationManager.GetUriWithQueryParameters("/terms", 
                        new Dictionary<string, object?> { 
                            ["search"] = term.Name,
                        });;
                <TermNavLink Href="@termHref" Term="@term"/>
            }
        }
    }

</MudNavMenu>
