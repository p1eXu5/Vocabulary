// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vocabulary.Adapters.Persistance;

#nullable disable

namespace Vocabulary.BlazorServer.Migrations
{
    [DbContext(typeof(VocabularyDbContext))]
    [Migration("20220410073432_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.3");

            modelBuilder.Entity("TermCategory", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TermId")
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryId", "TermId");

                    b.HasIndex("TermId");

                    b.ToTable("TermCategory");

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("a3667d54-1ba8-4c80-a593-2873a810a990"),
                            TermId = new Guid("2aded0e1-92d3-493f-abb4-d2381662cfda")
                        });
                });

            modelBuilder.Entity("Vocabulary.BlazorServer.Persistence.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a3667d54-1ba8-4c80-a593-2873a810a990"),
                            Name = "General"
                        });
                });

            modelBuilder.Entity("Vocabulary.BlazorServer.Persistence.Models.Link", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Href")
                        .IsRequired()
                        .HasMaxLength(2047)
                        .HasColumnType("TEXT");

                    b.Property<string>("ResourceDescription")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("TermId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TermId");

                    b.ToTable("Link", "dbo");
                });

            modelBuilder.Entity("Vocabulary.BlazorServer.Persistence.Models.Synonym", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("TermId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TermId");

                    b.ToTable("Synonym", "dbo");
                });

            modelBuilder.Entity("Vocabulary.BlazorServer.Persistence.Models.Term", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AdditionalName")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Sequence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    b.Property<string>("ValidationRules")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasAlternateKey("Sequence");

                    b.ToTable("Term", "dbo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2aded0e1-92d3-493f-abb4-d2381662cfda"),
                            Description = "Процесс преобразования Токена в PAN.",
                            Name = "Детокенизация",
                            Sequence = 1
                        });
                });

            modelBuilder.Entity("TermCategory", b =>
                {
                    b.HasOne("Vocabulary.BlazorServer.Persistence.Models.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TermCategory_Category_CategoryId");

                    b.HasOne("Vocabulary.BlazorServer.Persistence.Models.Term", null)
                        .WithMany()
                        .HasForeignKey("TermId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired()
                        .HasConstraintName("FK_TermLink_Terms_TermId");
                });

            modelBuilder.Entity("Vocabulary.BlazorServer.Persistence.Models.Link", b =>
                {
                    b.HasOne("Vocabulary.BlazorServer.Persistence.Models.Term", null)
                        .WithMany("Links")
                        .HasForeignKey("TermId");
                });

            modelBuilder.Entity("Vocabulary.BlazorServer.Persistence.Models.Synonym", b =>
                {
                    b.HasOne("Vocabulary.BlazorServer.Persistence.Models.Term", null)
                        .WithMany("Synonyms")
                        .HasForeignKey("TermId");
                });

            modelBuilder.Entity("Vocabulary.BlazorServer.Persistence.Models.Term", b =>
                {
                    b.Navigation("Links");

                    b.Navigation("Synonyms");
                });
#pragma warning restore 612, 618
        }
    }
}
